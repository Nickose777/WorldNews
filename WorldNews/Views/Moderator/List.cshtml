@using WorldNews.Helpers
@model IEnumerable<WorldNews.Models.Profile.ModeratorListViewModel>

<p class="display-4">Moderators</p>
<hr />
<div class="text-right">
    @Ajax.ActionLinkGet("Register new", "RegisterModerator", "Account", htmlAttributes: new { @class = "btn btn-success" })
</div>
<div class="d-flex flex-wrap justify-content-center">
    @foreach (var moderator in Model)
    {
        string action = !moderator.IsBanned
            ? "Ban"
            : "Unban";
        <div class="p-2">
            <div class="card card-fixed-3">
                @Html.Image(Url.Content(moderator.PhotoLink), "Avatar", new { @class = "card-img-top avatar rounded" })
                <div class="card-block">
                    @Html.RenderModeratorLogin(moderator)
                    <hr />
                    <p class="card-text">
                        @Html.DisplayNameFor(model => model.First().FirstName)
                        @Html.DisplayFor(model => moderator.FirstName)
                    </p>
                    <p class="card-text">
                        @Html.DisplayNameFor(model => model.First().LastName)
                        @Html.DisplayFor(model => moderator.LastName)
                    </p>
                    <div class="text-right">
                    </div>
                    <div class="dropdown">
                        <a class="btn btn-primary dropdown-toggle" href="#" id="@moderator.Login" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Options
                        </a>

                        <div class="dropdown-menu" aria-labelledby="@moderator.Login">
                            @Ajax.ActionLinkGet("Details", "Details", "Moderator", new { login = moderator.Login }, new { @class = "dropdown-item" })
                            @Ajax.ActionLinkGet("Edit", "Edit", "Moderator", new { login = moderator.Login }, new { @class = "dropdown-item" })
                            <div class="dropdown-divider"></div>
                            @Ajax.ActionLinkPost(action, action, "Account", "/Moderator/List", new { login = moderator.Login }, new { @class = "dropdown-item" })
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <small class="text-muted">@Html.DisplayFor(model => moderator.Email)</small>
                </div>
            </div>
        </div>
    }
</div>