@using WorldNews.Helpers
@model WorldNews.Models.Profile.ModeratorEditViewModel

<p class="display-4">Edit profile</p>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Login)
    @Html.HiddenFor(model => model.Email)
    @Html.HiddenFor(model => model.PhotoLink)

    <div class="d-flex justify-content-center">
        <div class="card card-fixed-3 mb-3">
            @Html.Image(Url.Content(Model.PhotoLink), "Avatar", new { @class = "card-img-top avatar rounded" })
            <div class="card-block">
                <h4 class="card-title">@Html.DisplayFor(model => model.Login)</h4>
                <hr />
                <p class="card-text">
                    @Html.DisplayNameFor(model => model.FirstName)
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </p>
                <p class="card-text">
                    @Html.DisplayNameFor(model => model.LastName)
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </p>
            </div>
            <div class="card-block text-right">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
            <div class="card-footer">
                <small class="text-muted">@Html.DisplayFor(model => model.Email)</small>
            </div>
        </div>
    </div>
}
<p class="text-primary">
    <i class="fa fa-arrow-left"></i>
    @Html.ActionLink("Back", "List")
</p>